{"remainingRequest":"D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MUI\\项目\\Tour\\node_modules\\@jiaminghi\\data-view\\lib\\components\\charts\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\MUI\\项目\\Tour\\node_modules\\@jiaminghi\\data-view\\lib\\components\\charts\\src\\main.vue","mtime":499162500000},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579498857582},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\babel-loader\\lib\\index.js","mtime":1579498894804},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579498857582},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\index.js","mtime":1579498888268}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport autoResize from '../../../mixin/autoResize'\n\nimport Charts from '@jiaminghi/charts'\n\nexport default {\n  name: 'DvCharts',\n  mixins: [autoResize],\n  props: {\n    option: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    const timestamp = Date.now()\n    return {\n      ref: `charts-container-${timestamp}`,\n      chartRef: `chart-${timestamp}`,\n\n      chart: null\n    }\n  },\n  watch: {\n    option () {\n      let { chart, option } = this\n\n      if (!chart) return\n\n      if (!option) option = {}\n\n      chart.setOption(option, true)\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { initChart } = this\n\n      initChart()\n    },\n    initChart () {\n      const { $refs, chartRef, option } = this\n\n      const chart = this.chart = new Charts($refs[chartRef])\n\n      if (!option) return\n\n      chart.setOption(option)\n    },\n    onResize () {\n      const { chart } = this\n\n      if (!chart) return\n\n      chart.resize()\n    }\n  }\n}\n",{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/charts/src","sourcesContent":["<template>\n  <div class=\"dv-charts-container\" :ref=\"ref\">\n    <div class=\"charts-canvas-container\" :ref=\"chartRef\" />\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport Charts from '@jiaminghi/charts'\n\nexport default {\n  name: 'DvCharts',\n  mixins: [autoResize],\n  props: {\n    option: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    const timestamp = Date.now()\n    return {\n      ref: `charts-container-${timestamp}`,\n      chartRef: `chart-${timestamp}`,\n\n      chart: null\n    }\n  },\n  watch: {\n    option () {\n      let { chart, option } = this\n\n      if (!chart) return\n\n      if (!option) option = {}\n\n      chart.setOption(option, true)\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { initChart } = this\n\n      initChart()\n    },\n    initChart () {\n      const { $refs, chartRef, option } = this\n\n      const chart = this.chart = new Charts($refs[chartRef])\n\n      if (!option) return\n\n      chart.setOption(option)\n    },\n    onResize () {\n      const { chart } = this\n\n      if (!chart) return\n\n      chart.resize()\n    }\n  }\n}\n</script>"]}]}