{"remainingRequest":"D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MUI\\项目\\Tour\\node_modules\\@jiaminghi\\data-view\\lib\\components\\waterLevelPond\\src\\main.vue?vue&type=template&id=d93e42ae&","dependencies":[{"path":"D:\\MUI\\项目\\Tour\\node_modules\\@jiaminghi\\data-view\\lib\\components\\waterLevelPond\\src\\main.vue","mtime":499162500000},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579498857582},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1579498888311},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579498857582},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\index.js","mtime":1579498888268}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"dv-water-pond-level\" }, [\n    _vm.renderer\n      ? _c(\"svg\", [\n          _c(\n            \"defs\",\n            [\n              _c(\n                \"linearGradient\",\n                {\n                  attrs: {\n                    id: _vm.gradientId,\n                    x1: \"0%\",\n                    y1: \"0%\",\n                    x2: \"0%\",\n                    y2: \"100%\"\n                  }\n                },\n                _vm._l(_vm.svgBorderGradient, function(lc) {\n                  return _c(\"stop\", {\n                    key: lc[0],\n                    attrs: { offset: lc[0], \"stop-color\": lc[1] }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _vm.renderer\n            ? _c(\n                \"text\",\n                {\n                  attrs: {\n                    stroke: \"url(#\" + _vm.gradientId + \")\",\n                    fill: \"url(#\" + _vm.gradientId + \")\",\n                    x: _vm.renderer.area[0] / 2 + 8,\n                    y: _vm.renderer.area[1] / 2 + 8\n                  }\n                },\n                [_vm._v(\"\\n      \" + _vm._s(_vm.details) + \"\\n    \")]\n              )\n            : _vm._e(),\n          !_vm.shape || _vm.shape === \"round\"\n            ? _c(\"ellipse\", {\n                attrs: {\n                  cx: _vm.renderer.area[0] / 2 + 8,\n                  cy: _vm.renderer.area[1] / 2 + 8,\n                  rx: _vm.renderer.area[0] / 2 + 5,\n                  ry: _vm.renderer.area[1] / 2 + 5,\n                  stroke: \"url(#\" + _vm.gradientId + \")\"\n                }\n              })\n            : _c(\"rect\", {\n                attrs: {\n                  x: \"2\",\n                  y: \"2\",\n                  rx: _vm.shape === \"roundRect\" ? 10 : 0,\n                  ry: _vm.shape === \"roundRect\" ? 10 : 0,\n                  width: _vm.renderer.area[0] + 12,\n                  height: _vm.renderer.area[1] + 12,\n                  stroke: \"url(#\" + _vm.gradientId + \")\"\n                }\n              })\n        ])\n      : _vm._e(),\n    _c(\"canvas\", {\n      ref: \"water-pond-level\",\n      style: \"border-radius: \" + _vm.radius + \";\"\n    })\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}