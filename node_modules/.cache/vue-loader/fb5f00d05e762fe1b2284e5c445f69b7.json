{"remainingRequest":"D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MUI\\项目\\Tour\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration1\\src\\main.vue?vue&type=template&id=d13105ec&","dependencies":[{"path":"D:\\MUI\\项目\\Tour\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration1\\src\\main.vue","mtime":499162500000},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579498857582},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1579498888311},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579498857582},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\index.js","mtime":1579498888268}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { ref: _vm.ref, staticClass: \"dv-decoration-1\" }, [\n    _c(\n      \"svg\",\n      {\n        style:\n          \"transform:scale(\" + _vm.svgScale[0] + \",\" + _vm.svgScale[1] + \");\",\n        attrs: { width: _vm.svgWH[0] + \"px\", height: _vm.svgWH[1] + \"px\" }\n      },\n      [\n        _vm._l(_vm.points, function(point, i) {\n          return [\n            Math.random() > 0.6\n              ? _c(\n                  \"rect\",\n                  {\n                    key: i,\n                    attrs: {\n                      fill: _vm.mergedColor[0],\n                      x: point[0] - _vm.halfPointSideLength,\n                      y: point[1] - _vm.halfPointSideLength,\n                      width: _vm.pointSideLength,\n                      height: _vm.pointSideLength\n                    }\n                  },\n                  [\n                    Math.random() > 0.6\n                      ? _c(\"animate\", {\n                          attrs: {\n                            attributeName: \"fill\",\n                            values: _vm.mergedColor[0] + \";transparent\",\n                            dur: \"1s\",\n                            begin: Math.random() * 2,\n                            repeatCount: \"indefinite\"\n                          }\n                        })\n                      : _vm._e()\n                  ]\n                )\n              : _vm._e()\n          ]\n        }),\n        _vm.rects[0]\n          ? _c(\n              \"rect\",\n              {\n                attrs: {\n                  fill: _vm.mergedColor[1],\n                  x: _vm.rects[0][0] - _vm.pointSideLength,\n                  y: _vm.rects[0][1] - _vm.pointSideLength,\n                  width: _vm.pointSideLength * 2,\n                  height: _vm.pointSideLength * 2\n                }\n              },\n              [\n                _c(\"animate\", {\n                  attrs: {\n                    attributeName: \"width\",\n                    values: \"0;\" + _vm.pointSideLength * 2,\n                    dur: \"2s\",\n                    repeatCount: \"indefinite\"\n                  }\n                }),\n                _c(\"animate\", {\n                  attrs: {\n                    attributeName: \"height\",\n                    values: \"0;\" + _vm.pointSideLength * 2,\n                    dur: \"2s\",\n                    repeatCount: \"indefinite\"\n                  }\n                }),\n                _c(\"animate\", {\n                  attrs: {\n                    attributeName: \"x\",\n                    values:\n                      _vm.rects[0][0] +\n                      \";\" +\n                      (_vm.rects[0][0] - _vm.pointSideLength),\n                    dur: \"2s\",\n                    repeatCount: \"indefinite\"\n                  }\n                }),\n                _c(\"animate\", {\n                  attrs: {\n                    attributeName: \"y\",\n                    values:\n                      _vm.rects[0][1] +\n                      \";\" +\n                      (_vm.rects[0][1] - _vm.pointSideLength),\n                    dur: \"2s\",\n                    repeatCount: \"indefinite\"\n                  }\n                })\n              ]\n            )\n          : _vm._e(),\n        _vm.rects[1]\n          ? _c(\n              \"rect\",\n              {\n                attrs: {\n                  fill: _vm.mergedColor[1],\n                  x: _vm.rects[1][0] - 40,\n                  y: _vm.rects[1][1] - _vm.pointSideLength,\n                  width: 40,\n                  height: _vm.pointSideLength * 2\n                }\n              },\n              [\n                _c(\"animate\", {\n                  attrs: {\n                    attributeName: \"width\",\n                    values: \"0;40;0\",\n                    dur: \"2s\",\n                    repeatCount: \"indefinite\"\n                  }\n                }),\n                _c(\"animate\", {\n                  attrs: {\n                    attributeName: \"x\",\n                    values:\n                      _vm.rects[1][0] +\n                      \";\" +\n                      (_vm.rects[1][0] - 40) +\n                      \";\" +\n                      _vm.rects[1][0],\n                    dur: \"2s\",\n                    repeatCount: \"indefinite\"\n                  }\n                })\n              ]\n            )\n          : _vm._e()\n      ],\n      2\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}