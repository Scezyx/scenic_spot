{"remainingRequest":"D:\\MUI\\项目\\Tour\\node_modules\\babel-loader\\lib\\index.js!D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MUI\\项目\\Tour\\node_modules\\@jiaminghi\\data-view\\lib\\components\\percentPond\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\MUI\\项目\\Tour\\node_modules\\@jiaminghi\\data-view\\lib\\components\\percentPond\\src\\main.vue","mtime":499162500000},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579498857582},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\babel-loader\\lib\\index.js","mtime":1579498894804},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579498857582},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\index.js","mtime":1579498888268}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\MUI\\\\\\u9879\\u76EE\\\\Tour\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.date.now\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index';\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util';\nexport default {\n  name: 'DvPercentPond',\n  props: {\n    config: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    var timestamp = Date.now();\n    return {\n      gradientId1: \"percent-pond-gradientId1-\".concat(timestamp),\n      gradientId2: \"percent-pond-gradientId2-\".concat(timestamp),\n      width: 0,\n      height: 0,\n      defaultConfig: {\n        /**\n         * @description Value\n         * @type {Number}\n         * @default value = 0\n         */\n        value: 0,\n\n        /**\n         * @description Colors (hex|rgb|rgba|color keywords)\n         * @type {Array<String>}\n         * @default colors = ['#00BAFF', '#3DE7C9']\n         * @example colors = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n         */\n        colors: ['#3DE7C9', '#00BAFF'],\n\n        /**\n         * @description Border width\n         * @type {Number}\n         * @default borderWidth = 3\n         */\n        borderWidth: 3,\n\n        /**\n         * @description Gap between border and pond\n         * @type {Number}\n         * @default borderGap = 3\n         */\n        borderGap: 3,\n\n        /**\n         * @description Line dash\n         * @type {Array<Number>}\n         * @default lineDash = [5, 1]\n         */\n        lineDash: [5, 1],\n\n        /**\n         * @description Text color\n         * @type {String}\n         * @default textColor = '#fff'\n         */\n        textColor: '#fff',\n\n        /**\n         * @description Border radius\n         * @type {Number}\n         * @default borderRadius = 5\n         */\n        borderRadius: 5,\n\n        /**\n         * @description Local Gradient\n         * @type {Boolean}\n         * @default localGradient = false\n         * @example localGradient = false | true\n         */\n        localGradient: false,\n\n        /**\n         * @description Formatter\n         * @type {String}\n         * @default formatter = '{value}%'\n         */\n        formatter: '{value}%'\n      },\n      mergedConfig: null\n    };\n  },\n  computed: {\n    rectWidth: function rectWidth() {\n      var mergedConfig = this.mergedConfig,\n          width = this.width;\n      if (!mergedConfig) return 0;\n      var borderWidth = mergedConfig.borderWidth;\n      return width - borderWidth;\n    },\n    rectHeight: function rectHeight() {\n      var mergedConfig = this.mergedConfig,\n          height = this.height;\n      if (!mergedConfig) return 0;\n      var borderWidth = mergedConfig.borderWidth;\n      return height - borderWidth;\n    },\n    points: function points() {\n      var mergedConfig = this.mergedConfig,\n          width = this.width,\n          height = this.height;\n      var halfHeight = height / 2;\n      if (!mergedConfig) return \"0, \".concat(halfHeight, \" 0, \").concat(halfHeight);\n      var borderWidth = mergedConfig.borderWidth,\n          borderGap = mergedConfig.borderGap,\n          value = mergedConfig.value;\n      var polylineLength = (width - (borderWidth + borderGap) * 2) / 100 * value;\n      return \"\\n        \".concat(borderWidth + borderGap, \", \").concat(halfHeight, \"\\n        \").concat(borderWidth + borderGap + polylineLength, \", \").concat(halfHeight + 0.001, \"\\n      \");\n    },\n    polylineWidth: function polylineWidth() {\n      var mergedConfig = this.mergedConfig,\n          height = this.height;\n      if (!mergedConfig) return 0;\n      var borderWidth = mergedConfig.borderWidth,\n          borderGap = mergedConfig.borderGap;\n      return height - (borderWidth + borderGap) * 2;\n    },\n    linearGradient: function linearGradient() {\n      var mergedConfig = this.mergedConfig;\n      if (!mergedConfig) return [];\n      var colors = mergedConfig.colors;\n      var colorNum = colors.length;\n      var colorOffsetGap = 100 / (colorNum - 1);\n      return colors.map(function (c, i) {\n        return [colorOffsetGap * i, c];\n      });\n    },\n    polylineGradient: function polylineGradient() {\n      var gradientId1 = this.gradientId1,\n          gradientId2 = this.gradientId2,\n          mergedConfig = this.mergedConfig;\n      if (!mergedConfig) return gradientId2;\n      if (mergedConfig.localGradient) return gradientId1;\n      return gradientId2;\n    },\n    gradient2XPos: function gradient2XPos() {\n      var mergedConfig = this.mergedConfig;\n      if (!mergedConfig) return '100%';\n      var value = mergedConfig.value;\n      return \"\".concat(200 - value, \"%\");\n    },\n    details: function details() {\n      var mergedConfig = this.mergedConfig;\n      if (!mergedConfig) return '';\n      var value = mergedConfig.value,\n          formatter = mergedConfig.formatter;\n      return formatter.replace('{value}', value);\n    }\n  },\n  watch: {\n    config: function config() {\n      var mergeConfig = this.mergeConfig;\n      mergeConfig();\n    }\n  },\n  methods: {\n    init: function () {\n      var _init = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var initWH, config, mergeConfig;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                initWH = this.initWH, config = this.config, mergeConfig = this.mergeConfig;\n                _context.next = 3;\n                return initWH();\n\n              case 3:\n                if (config) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 5:\n                mergeConfig();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    initWH: function () {\n      var _initWH = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var $nextTick, $refs, dom;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                $nextTick = this.$nextTick, $refs = this.$refs;\n                _context2.next = 3;\n                return $nextTick();\n\n              case 3:\n                dom = $refs['percent-pond'];\n                this.width = dom.clientWidth;\n                this.height = dom.clientHeight;\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function initWH() {\n        return _initWH.apply(this, arguments);\n      }\n\n      return initWH;\n    }(),\n    mergeConfig: function mergeConfig() {\n      var config = this.config,\n          defaultConfig = this.defaultConfig;\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {});\n    }\n  },\n  mounted: function mounted() {\n    var init = this.init;\n    init();\n  }\n};",{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dv-percent-pond\" ref=\"percent-pond\">\n    <svg>\n      <defs>\n        <linearGradient :id=\"gradientId1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop v-for=\"lc in linearGradient\" :key=\"lc[0]\"\n            :offset=\"`${lc[0]}%`\"\n            :stop-color=\"lc[1]\" />\n        </linearGradient>\n\n        <linearGradient :id=\"gradientId2\" x1=\"0%\" y1=\"0%\" :x2=\"gradient2XPos\" y2=\"0%\">\n          <stop v-for=\"lc in linearGradient\" :key=\"lc[0]\"\n            :offset=\"`${lc[0]}%`\"\n            :stop-color=\"lc[1]\" />\n        </linearGradient>\n      </defs>\n      <rect\n        :x=\"mergedConfig ? mergedConfig.borderWidth / 2 : '0'\"\n        :y=\"mergedConfig ? mergedConfig.borderWidth / 2 : '0'\"\n        :rx=\"mergedConfig ? mergedConfig.borderRadius : '0'\"\n        :ry=\"mergedConfig ? mergedConfig.borderRadius : '0'\"\n        fill=\"transparent\"\n        :stroke-width=\"mergedConfig ? mergedConfig.borderWidth : '0'\"\n        :stroke=\"`url(#${gradientId1})`\"\n        :width=\"rectWidth > 0 ? rectWidth : 0\"\n        :height=\"rectHeight > 0 ? rectHeight : 0\"\n      />\n      <polyline\n        :stroke-width=\"polylineWidth\"\n        :stroke-dasharray=\"mergedConfig ? mergedConfig.lineDash.join(',') : '0'\"\n        :stroke=\"`url(#${polylineGradient})`\"\n        :points=\"points\"\n      />\n      <text\n        :stroke=\"mergedConfig ? mergedConfig.textColor : '#fff'\"\n        :fill=\"mergedConfig ? mergedConfig.textColor : '#fff'\"\n        :x=\"width / 2\"\n        :y=\"height / 2\"\n      >\n        {{ details }}\n      </text>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvPercentPond',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    const timestamp = Date.now()\n    return {\n      gradientId1: `percent-pond-gradientId1-${timestamp}`,\n      gradientId2: `percent-pond-gradientId2-${timestamp}`,\n\n      width: 0,\n      height: 0,\n\n      defaultConfig: {\n        /**\n         * @description Value\n         * @type {Number}\n         * @default value = 0\n         */\n        value: 0,\n        /**\n         * @description Colors (hex|rgb|rgba|color keywords)\n         * @type {Array<String>}\n         * @default colors = ['#00BAFF', '#3DE7C9']\n         * @example colors = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n         */\n        colors: ['#3DE7C9', '#00BAFF'],\n        /**\n         * @description Border width\n         * @type {Number}\n         * @default borderWidth = 3\n         */\n        borderWidth: 3,\n        /**\n         * @description Gap between border and pond\n         * @type {Number}\n         * @default borderGap = 3\n         */\n        borderGap: 3,\n        /**\n         * @description Line dash\n         * @type {Array<Number>}\n         * @default lineDash = [5, 1]\n         */\n        lineDash: [5, 1],\n        /**\n         * @description Text color\n         * @type {String}\n         * @default textColor = '#fff'\n         */\n        textColor: '#fff',\n        /**\n         * @description Border radius\n         * @type {Number}\n         * @default borderRadius = 5\n         */\n        borderRadius: 5,\n        /**\n         * @description Local Gradient\n         * @type {Boolean}\n         * @default localGradient = false\n         * @example localGradient = false | true\n         */\n        localGradient: false,\n        /**\n         * @description Formatter\n         * @type {String}\n         * @default formatter = '{value}%'\n         */\n        formatter: '{value}%'\n      },\n\n      mergedConfig: null\n    }\n  },\n  computed: {\n    rectWidth () {\n      const { mergedConfig, width } = this\n\n      if (!mergedConfig) return 0\n\n      const { borderWidth } = mergedConfig\n\n      return width - borderWidth\n    },\n    rectHeight () {\n      const { mergedConfig, height } = this\n\n      if (!mergedConfig) return 0\n\n      const { borderWidth } = mergedConfig\n\n      return height - borderWidth\n    },\n    points () {\n      const { mergedConfig, width, height } = this\n\n      const halfHeight = height / 2\n\n      if (!mergedConfig) return `0, ${halfHeight} 0, ${halfHeight}`\n\n      const { borderWidth, borderGap, value } = mergedConfig\n\n      const polylineLength = (width - (borderWidth + borderGap) * 2) / 100 * value\n\n      return `\n        ${borderWidth + borderGap}, ${halfHeight}\n        ${borderWidth + borderGap + polylineLength}, ${halfHeight + 0.001}\n      `\n    },\n    polylineWidth () {\n      const { mergedConfig, height } = this\n\n      if (!mergedConfig) return 0\n\n      const { borderWidth, borderGap } = mergedConfig\n\n      return height - (borderWidth + borderGap) * 2\n    },\n    linearGradient () {\n      const { mergedConfig } = this\n\n      if (!mergedConfig) return []\n\n      const { colors } = mergedConfig\n\n      const colorNum = colors.length\n\n      const colorOffsetGap = 100 / (colorNum - 1)\n\n      return colors.map((c, i) => [colorOffsetGap * i, c])\n    },\n    polylineGradient () {\n      const { gradientId1, gradientId2, mergedConfig } = this\n\n      if (!mergedConfig) return gradientId2\n\n      if (mergedConfig.localGradient) return gradientId1\n\n      return gradientId2\n    },\n    gradient2XPos () {\n      const { mergedConfig } = this\n\n      if (!mergedConfig) return '100%'\n\n      const { value } = mergedConfig\n\n      return `${200 - value}%`\n    },\n    details () {\n      const { mergedConfig } = this\n\n      if (!mergedConfig) return ''\n\n      const { value, formatter } = mergedConfig\n\n      return formatter.replace('{value}', value)\n    }\n  },\n  watch: {\n    config () {\n      const { mergeConfig } = this\n\n      mergeConfig()\n    }\n  },\n  methods: {\n    async init () {\n      const { initWH, config, mergeConfig } = this\n\n      await initWH()\n\n      if (!config) return\n\n      mergeConfig()\n    },\n    async initWH () {\n      const { $nextTick, $refs } = this\n\n      await $nextTick()\n\n      const dom = $refs['percent-pond']\n\n      this.width = dom.clientWidth\n      this.height = dom.clientHeight\n    },\n    mergeConfig () {\n      const { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    }\n  },\n  mounted () {\n    const { init } = this\n\n    init()\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/percentPond/src"}]}