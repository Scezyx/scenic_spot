{"remainingRequest":"D:\\MUI\\项目\\Tour\\node_modules\\babel-loader\\lib\\index.js!D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MUI\\项目\\Tour\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration5\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\MUI\\项目\\Tour\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration5\\src\\main.vue","mtime":499162500000},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579498857582},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\babel-loader\\lib\\index.js","mtime":1579498894804},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579498857582},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\index.js","mtime":1579498888268}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport autoResize from \"../../../mixin/autoResize\";\nimport { getPolylineLength } from '@jiaminghi/charts/lib/util';\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index';\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util';\nexport default {\n  name: 'DvDecoration5',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      ref: 'decoration-5',\n      line1Points: '',\n      line2Points: '',\n      line1Length: 0,\n      line2Length: 0,\n      defaultColor: ['#3f96a5', '#3f96a5'],\n      mergedColor: []\n    };\n  },\n  watch: {\n    color: function color() {\n      var mergeColor = this.mergeColor;\n      mergeColor();\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit: function afterAutoResizeMixinInit() {\n      var calcSVGData = this.calcSVGData;\n      calcSVGData();\n    },\n    calcSVGData: function calcSVGData() {\n      var width = this.width,\n          height = this.height;\n      var line1Points = [[0, height * 0.2], [width * 0.18, height * 0.2], [width * 0.2, height * 0.4], [width * 0.25, height * 0.4], [width * 0.27, height * 0.6], [width * 0.72, height * 0.6], [width * 0.75, height * 0.4], [width * 0.8, height * 0.4], [width * 0.82, height * 0.2], [width, height * 0.2]];\n      var line2Points = [[width * 0.3, height * 0.8], [width * 0.7, height * 0.8]];\n      var line1Length = getPolylineLength(line1Points);\n      var line2Length = getPolylineLength(line2Points);\n      line1Points = line1Points.map(function (point) {\n        return point.join(',');\n      }).join(' ');\n      line2Points = line2Points.map(function (point) {\n        return point.join(',');\n      }).join(' ');\n      this.line1Points = line1Points;\n      this.line2Points = line2Points;\n      this.line1Length = line1Length;\n      this.line2Length = line2Length;\n    },\n    onResize: function onResize() {\n      var calcSVGData = this.calcSVGData;\n      calcSVGData();\n    },\n    mergeColor: function mergeColor() {\n      var color = this.color,\n          defaultColor = this.defaultColor;\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || []);\n    }\n  },\n  mounted: function mounted() {\n    var mergeColor = this.mergeColor;\n    mergeColor();\n  }\n};",{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dv-decoration-5\" :ref=\"ref\">\n    <svg :width=\"width\" :height=\"height\">\n      <polyline\n        fill=\"transparent\"\n        :stroke=\"mergedColor[0]\"\n        stroke-width=\"3\"\n        :points=\"line1Points\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          attributeType=\"XML\"\n          :from=\"`0, ${line1Length / 2}, 0, ${line1Length / 2}`\"\n          :to=\"`0, 0, ${line1Length}, 0`\"\n          dur=\"1.2s\"\n          begin=\"0s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          keySplines=\"0.4,1,0.49,0.98\"\n          repeatCount=\"indefinite\"\n        />\n      </polyline>\n      <polyline\n        fill=\"transparent\"\n        :stroke=\"mergedColor[1]\"\n        stroke-width=\"2\"\n        :points=\"line2Points\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          attributeType=\"XML\"\n          :from=\"`0, ${line2Length / 2}, 0, ${line2Length / 2}`\"\n          :to=\"`0, 0, ${line2Length}, 0`\"\n          dur=\"1.2s\"\n          begin=\"0s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          keySplines=\".4,1,.49,.98\"\n          repeatCount=\"indefinite\"\n        />\n      </polyline>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { getPolylineLength } from '@jiaminghi/charts/lib/util'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration5',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    }\n  },\n  data () {\n    return {\n      ref: 'decoration-5',\n\n      line1Points: '',\n      line2Points: '',\n\n      line1Length: 0,\n      line2Length: 0,\n\n      defaultColor: ['#3f96a5', '#3f96a5'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    calcSVGData () {\n      const { width, height } = this\n\n      let line1Points = [\n        [0, height * 0.2], [width * 0.18, height * 0.2], [width * 0.2, height * 0.4], [width * 0.25, height * 0.4],\n        [width * 0.27, height * 0.6], [width * 0.72, height * 0.6], [width * 0.75, height * 0.4],\n        [width * 0.8, height * 0.4], [width * 0.82, height * 0.2], [width, height * 0.2]\n      ]\n\n      let line2Points = [\n        [width * 0.3, height * 0.8], [width * 0.7, height * 0.8]\n      ]\n\n      const line1Length = getPolylineLength(line1Points)\n      const line2Length = getPolylineLength(line2Points)\n\n      line1Points = line1Points.map(point => point.join(',')).join(' ')\n      line2Points = line2Points.map(point => point.join(',')).join(' ')\n\n      this.line1Points = line1Points\n      this.line2Points = line2Points\n\n      this.line1Length = line1Length\n      this.line2Length = line2Length\n    },\n    onResize () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/decoration5/src"}]}