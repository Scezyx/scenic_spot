{"remainingRequest":"D:\\MUI\\项目\\Tour\\node_modules\\babel-loader\\lib\\index.js!D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MUI\\项目\\Tour\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration8\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\MUI\\项目\\Tour\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration8\\src\\main.vue","mtime":499162500000},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579498857582},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\babel-loader\\lib\\index.js","mtime":1579498894804},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579498857582},{"path":"D:\\MUI\\项目\\Tour\\node_modules\\vue-loader\\lib\\index.js","mtime":1579498888268}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport autoResize from \"../../../mixin/autoResize\";\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index';\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util';\nexport default {\n  name: 'DvDecoration8',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      ref: 'decoration-8',\n      defaultColor: ['#3f96a5', '#3f96a5'],\n      mergedColor: []\n    };\n  },\n  watch: {\n    color: function color() {\n      var mergeColor = this.mergeColor;\n      mergeColor();\n    }\n  },\n  methods: {\n    xPos: function xPos(pos) {\n      var reverse = this.reverse,\n          width = this.width;\n      if (!reverse) return pos;\n      return width - pos;\n    },\n    mergeColor: function mergeColor() {\n      var color = this.color,\n          defaultColor = this.defaultColor;\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || []);\n    }\n  },\n  mounted: function mounted() {\n    var mergeColor = this.mergeColor;\n    mergeColor();\n  }\n};",{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAA,UAAA;AAEA,SAAA,SAAA,QAAA,kCAAA;AAEA,SAAA,SAAA,QAAA,qCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GAHA;AAaA,EAAA,IAbA,kBAaA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,cADA;AAGA,MAAA,YAAA,EAAA,CAAA,SAAA,EAAA,SAAA,CAHA;AAKA,MAAA,WAAA,EAAA;AALA,KAAA;AAOA,GArBA;AAsBA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,mBACA;AAAA,UACA,UADA,GACA,IADA,CACA,UADA;AAGA,MAAA,UAAA;AACA;AALA,GAtBA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,GADA,EACA;AAAA,UACA,OADA,GACA,IADA,CACA,OADA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAGA,UAAA,CAAA,OAAA,EAAA,OAAA,GAAA;AAEA,aAAA,KAAA,GAAA,GAAA;AACA,KAPA;AAQA,IAAA,UARA,wBAQA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAGA,WAAA,WAAA,GAAA,SAAA,CAAA,SAAA,CAAA,YAAA,EAAA,IAAA,CAAA,EAAA,KAAA,IAAA,EAAA,CAAA;AACA;AAZA,GA7BA;AA2CA,EAAA,OA3CA,qBA2CA;AAAA,QACA,UADA,GACA,IADA,CACA,UADA;AAGA,IAAA,UAAA;AACA;AA/CA,CAAA","sourcesContent":["<template>\n  <div class=\"dv-decoration-8\" :ref=\"ref\">\n    <svg :width=\"width\" :height=\"height\">\n      <polyline\n        :stroke=\"mergedColor[0]\"\n        stroke-width=\"2\"\n        fill=\"transparent\"\n        :points=\"`${xPos(0)}, 0 ${xPos(30)}, ${height / 2}`\"\n      />\n\n      <polyline\n        :stroke=\"mergedColor[0]\"\n        stroke-width=\"2\"\n        fill=\"transparent\"\n        :points=\"`${xPos(20)}, 0 ${xPos(50)}, ${height / 2} ${xPos(width)}, ${height / 2}`\"\n      />\n\n      <polyline\n        :stroke=\"mergedColor[1]\"\n        fill=\"transparent\"\n        stroke-width=\"3\"\n        :points=\"`${xPos(0)}, ${height - 3}, ${xPos(200)}, ${height - 3}`\"\n      />\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration8',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      ref: 'decoration-8',\n\n      defaultColor: ['#3f96a5', '#3f96a5'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    xPos (pos) {\n      const { reverse, width } = this\n\n      if (!reverse) return pos\n\n      return width - pos\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/decoration8/src"}]}